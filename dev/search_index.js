var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MusicSpiralRepresentation","category":"page"},{"location":"#MusicSpiralRepresentation","page":"Home","title":"MusicSpiralRepresentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MusicSpiralRepresentation.","category":"page"},{"location":"#Spiral-Representation","page":"Home","title":"Spiral Representation","text":"","category":"section"},{"location":"#Center-of-Effect","page":"Home","title":"Center of Effect","text":"","category":"section"},{"location":"#Estimating-the-most-likely-key","page":"Home","title":"Estimating the most likely key","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MusicSpiralRepresentation]","category":"page"},{"location":"#MusicSpiralRepresentation.funhar_seq-Tuple{Any, Any}","page":"Home","title":"MusicSpiralRepresentation.funhar_seq","text":"funhar_seq(kseq, fun_key)\nReturns a sequence of Roman numerals given a reference for the Tonic Key.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_Major_chord-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_Major_chord","text":"get_Major_chord(k; w=[0.536, 0.274, 0.19], r=1, h=sqrt(2/15))\n\nReturns the location (x,y,z) of a Major chord given by a linear combination\nof a triad constructed from a fundamental note \"k\", the fifth (k+1) and the third (k+4)\nin the spiral representation. The vector \"w\" contains the weights used for each term.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_Major_key-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_Major_key","text":"get_Major_key(k; o=[0.536, 0.274, 0.19], w=[0.536, 0.274, 0.19], r=1, h=sqrt(2/15))\n\nReturns the location (x,y,z) of a Major Key given by a linear combination\nof chord triads constructed from the major chords of a fundamental \"tonic\" note \"k\",\nthe dominant/fifth (k+1) and the subdominant/minor third (k-3) in the spiral representation.\nThe vector \"o\" contains the weights used for each chord and \"w\" are the weights on each note in the chord.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_center_effect-Tuple{Matrix}","page":"Home","title":"MusicSpiralRepresentation.get_center_effect","text":"get_center_effect(chunk_notes; r=1, h=sqrt(2/15), \n                all_keys=all_keys, pos_all_keys=pos_all_keys, \n                sbeat_w=[[1.],[1.]], lin_w=1)\n\nComputes the coordinates (x,y,z) for the center of effect (mass)\nfor a given set of notes, these notes can be in different formats:\nNotes are always represented in MIDI notation, note durations can\nbe in any numeric format.\n\n    Matrix: From the DataFrame built with get_xml_df or get_csv_df\n    1d - Array: [n1,n2,...,nm], where each element represents a note in MIDI notation\n    two 1d - Array: [n1,n2,...,nm], [d1,d2,...,dm], with the set of n\n    representing the notes in MIDI notation and d each of their durations.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_cfpitch-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_cfpitch","text":"get_cfpitch(pitch_seq)\n\nConverts a pitch sequence of MIDI values (0-127) into a pitch sequence ordered by fifths\nto be consistent with the cylindrical representation, starting in C=0, G=1, ..., etc.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_cfpitch_mod12-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_cfpitch_mod12","text":"get_cfpitch_mod12(pitch_seq)\n\nConverts a pitch sequence of MIDI values (0-127) into a pitch sequence in mod12 ordered by fifths\nto be consistent with the cylindrical representation, starting in C=0, G=1, ..., etc.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_local_lin_w-Tuple{Any, Any}","page":"Home","title":"MusicSpiralRepresentation.get_local_lin_w","text":"get_local_lin_w(ptcs, factor)\n\nReturns a list of pitches and their respective weights from a sequence of pitches (ptcs)\nand a weighting factor (factor), the weighting gives more importance to lower notes\nwithin the 1-factor range.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_minor_chord-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_minor_chord","text":"get_minor_chord(k; u=[0.536, 0.274, 0.19], r=1, h=sqrt(2/15))\n\nReturns the location (x,y,z) of a Minor chord given by a linear combination\nof a triad constructed from a fundamental note \"k\", the fifth (k+1) and the minor third (k-3)\nin the spiral representation. The vector \"u\" contains the weights used for each term.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_minor_key-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_minor_key","text":"get_minor_key(k; v=[0.536, 0.274, 0.19], w=[0.536, 0.274, 0.19],\nu=[0.536, 0.274, 0.19], a=0.75, b=0.75, r=1, h=sqrt(2/15))\n\nReturns the location (x,y,z) of a Minor Key given by a linear combination\nof chord triads constructed from the major chords of a fundamental note \"k\",\nthe possible \"dominant\" triad (k+1) and the possible \"subdominant\" triad (k-3) in the spiral representation.\nThe vector \"v\" contains the weights used for each chord and \"w\" are the weights on each note in the major chords.\n\"u\" are the weights for the minor chords. The dominant and subdominant minor/major chords are weighted by \"a\" and \"b\".\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_onon_notes-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_onon_notes","text":"get_onon_notes(s)\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_piece_by_measure_csv-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_piece_by_measure_csv","text":"get_piece_by_measure_csv(s; qdiv=32, abs_time=true)\n\nReturns a vector of two dimensional arrays of the basic information of the piece for analyzing its properties,\ninput \"s\" should be a CSV table from a CSV file converted from a MIDI file with the midicsv script available for free\nin: https://www.fourmilab.ch/webtools/midicsv/ .\n\nThe first output consist of a vector which components represent each measure of the music piece,\neach measure contains four columns; Beat: number of beat where the note starts (beat or halfbeat)\nMeasure: the fraction of the measure (n/d), Duration: the duration of the note in midiclocks, if abs_time=true\nthe output returns the time in ms where the note started and ended before the duration of the note,\nPitch: the pitch of the note represented in MIDI notation (0-127).\n\nThe second output corresponds to the total number of notes in the piece and the number of notes that\nfall outside the threshold given (1/qdiv), most of the time if notes fall outside this threshold is because\nthe MIDI was sequenced (recorded) instead of generated with a music score software.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_piece_by_measure_m21-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_piece_by_measure_m21","text":"function get_piece_by_measure_m21(m21_data; start_measure=1)\n\nReturns an array with the information of pitches and duration on each measure in the following format:\n\n| #measure | time signature | start_quarter | end_quarter | duration (in quarters) | pitch (0-127) |\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_pitch-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_pitch","text":"get_pitch(k; r=1, h=sqrt(2/15))\n\nReturns the location (x,y,z) of a pitch \"k\"\nin the spiral representation, pitches are in module 12\nthe variable \"r\" is the radius of the cylinder\nand \"h\" is the vertical distance between thirds.\n\n\n\n\n\n","category":"method"},{"location":"#MusicSpiralRepresentation.get_rank_freq-Tuple{Any}","page":"Home","title":"MusicSpiralRepresentation.get_rank_freq","text":"get_rank_freq(series)\n\nReturns a 2-Dimensional Array of symbols and their respective frequencies\nfrom a series of data. The output is ordered by rank (most to least frequent).\n\n\n\n\n\n","category":"method"}]
}
